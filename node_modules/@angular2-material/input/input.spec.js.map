{"version":3,"file":"input.spec.js","sourceRoot":"","sources":["input.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  it,\n  expect,\n  beforeEach,\n  fakeAsync,\n  inject,\n  ComponentFixture,\n  TestComponentBuilder,\n  injectAsync,\n  tick,\n} from 'angular2/testing';\nimport {Component} from 'angular2/core';\nimport {By} from 'angular2/platform/browser';\nimport {\n  MdInput,\n  MdInputDuplicatedHintException,\n  MD_INPUT_DIRECTIVES,\n  MdInputPlaceholderConflictException\n} from './input';\n\n\nexport function main() {\n  describe('MdInput', function () {\n    var builder: TestComponentBuilder;\n\n    beforeEach(inject([TestComponentBuilder], function (tcb: TestComponentBuilder) {\n      builder = tcb;\n    }));\n\n    it('creates a native <input> element', injectAsync([], () => {\n      return builder.createAsync(MdInputBaseTestController)\n        .then((fixture) => {\n          fixture.detectChanges();\n          expect(fixture.debugElement.query(By.css('input'))).toBeTruthy();\n        });\n    }));\n\n    it('support ngModel', injectAsync([], () => {\n      return builder.createAsync(MdInputBaseTestController)\n        .then((fixture) => {\n          fixture.detectChanges();\n          fakeAsync(() => {\n            let instance = fixture.componentInstance;\n            let component = fixture.debugElement.query(By.directive(MdInput)).componentInstance;\n            let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n\n            instance.model = 'hello';\n            fixture.detectChanges();\n            tick();\n            expect(el.value).toEqual('hello');\n\n            component.value = 'world';\n            fixture.detectChanges();\n            tick();\n            expect(el.value).toEqual('world');\n          })();\n        });\n    }));\n\n    it('counts characters', injectAsync([], () => {\n      return builder.createAsync(MdInputBaseTestController)\n        .then((fixture) => {\n          let instance = fixture.componentInstance;\n          fixture.detectChanges();\n          let inputInstance = fixture.debugElement.query(By.directive(MdInput)).componentInstance;\n          expect(inputInstance.characterCount).toEqual(0);\n\n          instance.model = 'hello';\n          fixture.detectChanges();\n          expect(inputInstance.characterCount).toEqual(5);\n        });\n    }));\n\n    it('copies aria attributes to the inner input', injectAsync([], () => {\n      return builder.createAsync(MdInputAriaTestController)\n        .then((fixture) => {\n          let instance = fixture.componentInstance;\n          fixture.detectChanges();\n          let el: HTMLInputElement = fixture.debugElement.query(By.css('input')).nativeElement;\n          expect(el.getAttribute('aria-label')).toEqual('label');\n          instance.ariaLabel = 'label 2';\n          fixture.detectChanges();\n          expect(el.getAttribute('aria-label')).toEqual('label 2');\n\n          expect(el.getAttribute('aria-disabled')).toBeTruthy();\n        });\n    }));\n\n    it('validates there\\'s only one hint label per side', injectAsync([], () => {\n      return builder.createAsync(MdInputInvalidHintTestController)\n        .then((fixture: ComponentFixture) => {\n          fakeAsync(() => {\n            expect(() => fixture.detectChanges())\n              .toThrow(new MdInputDuplicatedHintException('start'));\n          })();\n        });\n    }));\n\n    it(`validates there's only one hint label per side (attribute)`, injectAsync([], () => {\n      return builder.createAsync(MdInputInvalidHint2TestController)\n        .then((fixture: ComponentFixture) => {\n          fakeAsync(() => {\n            expect(() => fixture.detectChanges())\n              .toThrow(new MdInputDuplicatedHintException('start'));\n          })();\n        });\n    }));\n\n    it('validates there\\'s only one placeholder', injectAsync([], () => {\n      return builder.createAsync(MdInputInvalidPlaceholderTestController)\n        .then((fixture: ComponentFixture) => {\n          fakeAsync(() => {\n            expect(() => fixture.detectChanges())\n              .toThrow(new MdInputPlaceholderConflictException());\n          })();\n        });\n    }));\n\n    it('validates the type', injectAsync([], () => {\n      return builder.createAsync(MdInputInvalidTypeTestController)\n        .then((fixture: ComponentFixture) => {\n          fakeAsync(() => {\n            // Technically this throws during the OnChanges detection phase,\n            // so the error is really a ChangeDetectionError and it becomes\n            // hard to build a full exception to compare with.\n            // We just check for any exception in this case.\n            expect(() => fixture.detectChanges())\n              .toThrow(/* new MdInputUnsupportedTypeException('file') */);\n          })();\n        });\n    }));\n\n    it('supports hint labels attribute', injectAsync([], () => {\n      return builder.createAsync(MdInputHintLabelTestController)\n        .then((fixture: ComponentFixture) => {\n          fakeAsync(() => {\n            fixture.detectChanges();\n\n            // If the hint label is empty, expect no label.\n            expect(fixture.debugElement.query(By.css('.md-hint'))).toBeNull();\n\n            fixture.componentInstance.label = 'label';\n            fixture.detectChanges();\n            expect(fixture.debugElement.query(By.css('.md-hint'))).not.toBeNull();\n          })();\n        });\n    }));\n\n    it('supports hint labels elements', injectAsync([], () => {\n      return builder.createAsync(MdInputHintLabel2TestController)\n        .then((fixture: ComponentFixture) => {\n          fakeAsync(() => {\n            fixture.detectChanges();\n\n            // In this case, we should have an empty <md-hint>.\n            let el = fixture.debugElement.query(By.css('md-hint')).nativeElement;\n            expect(el.textContent).toBeFalsy();\n\n            fixture.componentInstance.label = 'label';\n            fixture.detectChanges();\n            el = fixture.debugElement.query(By.css('md-hint')).nativeElement;\n            expect(el.textContent).toBe('label');\n          })();\n        });\n    }));\n\n    it('supports placeholder attribute', injectAsync([], () => {\n      return builder.createAsync(MdInputPlaceholderAttrTestComponent)\n        .then((fixture: ComponentFixture) => {\n          fakeAsync(() => {\n            fixture.detectChanges();\n\n            let el = fixture.debugElement.query(By.css('label'));\n            expect(el).toBeNull();\n\n            fixture.componentInstance.placeholder = 'Other placeholder';\n            fixture.detectChanges();\n            el = fixture.debugElement.query(By.css('label'));\n            expect(el).not.toBeNull();\n            expect(el.nativeElement.textContent).toMatch('Other placeholder');\n            expect(el.nativeElement.textContent).not.toMatch(/\\*/g);\n          })();\n        });\n    }));\n\n    it('supports placeholder element', injectAsync([], () => {\n      return builder.createAsync(MdInputPlaceholderElementTestComponent)\n        .then((fixture: ComponentFixture) => {\n          fakeAsync(() => {\n            fixture.detectChanges();\n\n            let el = fixture.debugElement.query(By.css('label'));\n            expect(el).not.toBeNull();\n            expect(el.nativeElement.textContent).toMatch('Default Placeholder');\n\n            fixture.componentInstance.placeholder = 'Other placeholder';\n            fixture.detectChanges();\n            el = fixture.debugElement.query(By.css('label'));\n            expect(el).not.toBeNull();\n            expect(el.nativeElement.textContent).toMatch('Other placeholder');\n            expect(el.nativeElement.textContent).not.toMatch(/\\*/g);\n          })();\n        });\n    }));\n\n    it('supports placeholder required star', injectAsync([], () => {\n      return builder.createAsync(MdInputPlaceholderRequiredTestComponent)\n        .then((fixture: ComponentFixture) => {\n          fakeAsync(() => {\n            fixture.detectChanges();\n\n            let el = fixture.debugElement.query(By.css('label'));\n            expect(el).not.toBeNull();\n            expect(el.nativeElement.textContent).toMatch(/hello\\s+\\*/g);\n          })();\n        });\n    }));\n  });\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input required placeholder=\"hello\">\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputPlaceholderRequiredTestComponent {\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input>\n      <md-placeholder>{{placeholder}}</md-placeholder>\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputPlaceholderElementTestComponent {\n  placeholder: string = 'Default Placeholder';\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input [placeholder]=\"placeholder\">\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputPlaceholderAttrTestComponent {\n  placeholder: string = '';\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input>\n      <md-hint>{{label}}</md-hint>\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputHintLabel2TestController {\n  label: string = '';\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input [hintLabel]=\"label\">\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputHintLabelTestController {\n  label: string = '';\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input type=\"file\">\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputInvalidTypeTestController {\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input placeholder=\"Hello\">\n      <md-placeholder>World</md-placeholder>\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputInvalidPlaceholderTestController {\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input hintLabel=\"Hello\">\n      <md-hint>World</md-hint>\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputInvalidHint2TestController {\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input>\n      <md-hint>Hello</md-hint>\n      <md-hint>World</md-hint>\n    </md-input>\n  `,\n  directives: [MD_INPUT_DIRECTIVES]\n})\nclass MdInputInvalidHintTestController {\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input [(ngModel)]=\"model\">\n    </md-input>\n  `,\n  directives: [MdInput]\n})\nclass MdInputBaseTestController {\n  model: any = '';\n}\n\n@Component({\n  selector: 'test-input-controller',\n  template: `\n    <md-input [aria-label]=\"ariaLabel\" [aria-disabled]=\"ariaDisabled\">\n    </md-input>\n  `,\n  directives: [MdInput]\n})\nclass MdInputAriaTestController {\n  ariaLabel: string = 'label';\n  ariaDisabled: boolean = true;\n}\n"]}